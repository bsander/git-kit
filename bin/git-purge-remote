#!/bin/bash

# Define command flags
set_flags () {
  DEFINE_string "branch" "$(git select-branch)" "branch to use as HEAD" "b"
  DEFINE_string "remote" "$(git select-remote)" "remote to use" "r"
}

# Load shared functions and parse arguments
BASE_DIR=$(d() { (cd -P "$(dirname "$1")" && pwd) }; while [ -h "${S=${BASH_SOURCE[0]}}" ]; do D=$(d "$S"); S=$(readlink "$S"); [[ $S != /* ]] && S="$D/$S"; done; d "$S")
. "$BASE_DIR/functions.sh"

# Don't use :- on $1 to disable the prefix check when passing ""
PATTERN="${1-\(feature\|release\|hotfix\)/}"
# shellcheck disable=SC2154
REMOTE=$(git select-remote "$FLAGS_remote")
# shellcheck disable=SC2154
HEAD=$(git select-branch "" "$FLAGS_remote")

REMOTE_BRANCHES=$(git branch --remotes --merged "$HEAD" |
  grep -v "^\\s*${REMOTE}/HEAD ->" | # ignore HEAD reference
  grep -v "^\\s*${REMOTE}/${HEAD}" | # ignore actual HEAD branch
  grep "^\s*$REMOTE/.*$PATTERN.*" | # keep topic branches
  sed "s/\s*$REMOTE\\///" || :) # drop remote prefix
[[ $REMOTE_BRANCHES ]] || {
  echo "No remote purgable branches found for $HEAD"
  exit 0
}

[[ $REMOTE_BRANCHES ]] && {
  echo; echo "${REMOTE}:"
  echo "$REMOTE_BRANCHES" | xargs -n 1 echo "-"
}
yn "Delete remote branches?"
echo

if [[ $REMOTE_BRANCHES ]]; then
  # no quotes on last argument, we want it to be expanded here
  # shellcheck disable=2086
  (set -x; git push "$REMOTE" --delete $REMOTE_BRANCHES )
fi
